---
import { formatDate } from '@/lib/utils';
import { sortedBlogPosts } from '@/lib/utils/getSortedPosts';

const latestPosts = Astro.props.postCount
  ? sortedBlogPosts.slice(0, Astro.props.postCount)
  : sortedBlogPosts;

interface Props {
  postCount?: number;
  lineClamp?: string;
  split?: boolean;
}

const { lineClamp, split = false } = Astro.props;
---

<div class="relative">
  <!-- Continuous timeline line -->
  <div class="absolute left-4 sm:left-8 top-[30px] bottom-[30px] w-[1px] bg-border/40"></div>
  
  {
    latestPosts.map((post, index) => (
      <article class="group relative">
        <a href={`/posts/${post.slug}`} class="block">
          <div class="relative py-6 pl-8 sm:pl-16">
            <!-- Timeline dot -->
            <div class="absolute left-[13px] sm:left-[29px] top-[31px] h-[7px] w-[7px] rounded-full bg-border group-hover:bg-accent-500 transition-all duration-200 z-10"></div>
            
            <!-- Content -->
            <div class="relative">
              <div class="mb-2">
                <div class="flex items-start justify-between gap-4">
                  <h2 class="text-base font-medium text-foreground group-hover:text-accent-600 dark:group-hover:text-accent-400 transition-colors">
                    {post.data.title}
                  </h2>
                  <time class="text-xs text-muted-foreground whitespace-nowrap mt-0.5">
                    {formatDate(post.data.pubDate)}
                  </time>
                </div>
              </div>
              
              <p class:list={['text-sm text-muted-foreground leading-relaxed', lineClamp]}>
                {post.data.description}
              </p>
            </div>
          </div>
        </a>
      </article>
    ))
  }
</div>