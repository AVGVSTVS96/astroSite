---
const { class: className, heading, isSubheading, level = 0 } = Astro.props;
import type { MarkdownHeading } from 'astro';
import { Icon } from 'astro-icon/components';

export interface Heading extends MarkdownHeading {
  subheadings: Heading[];
}

interface Props {
  class?: string;
  isSubheading?: boolean;
  level?: number;
  heading: Heading;
}
---

<li class={className}>
  <a
    href={'#' + heading.slug}
    class="group hover:text-foreground/80 mt-0 flex items-start no-underline">
    <Icon
      name="sideCaret"
      size={13}
      class:list={[
        'dark:group-hover:stroke-primary-300 mx-1 mt-1 shrink-0',
        isSubheading ? '' : 'hidden',
        level === 2
          ? 'stroke-primary-400 group-hover:stroke-primary-400/50 dark:stroke-primary-500'
          : 'stroke-primary-600 group-hover:stroke-primary-400/80 dark:stroke-primary-400',
      ]}
      title="caret-icon"
    />
    {heading.text}
  </a>
  {
    heading.subheadings.length > 0 && (
      <ul class={`${isSubheading ? 'ml-2' : ''} my-0 list-none px-0`}>
        {heading.subheadings.map((subheading: Heading) => (
          <Astro.self
            class="px-0"
            heading={subheading}
            isSubheading={true}
            level={level + 1}
          />
        ))}
      </ul>
    )
  }
</li>

<style>
  li:has(.active) > a {
    color: var(--color-accent-400);
  }

  :root.dark li:has(.active) > a {
    color: var(--color-accent-300);
  }

  a:hover {
    color: var(--color-foreground);
    opacity: 0.8;
  }
</style>
