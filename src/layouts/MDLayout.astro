---
const { frontmatter, headings } = Astro.props;
import TableOfContents from '@components/TableOfContents.astro';
import BaseLayout from '@layouts/BaseLayout.astro';
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

const isoDate = new Date(frontmatter.pubDate).toISOString().substring(0, 10);
const imageUrl = new URL(frontmatter.image, Astro.request.url).href;
const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/images/*.{jpeg,jpg,png,gif}'
);
if (frontmatter.image && !images[frontmatter.image])
  throw new Error(`"${frontmatter.image}" does not exist in images directory"`);

const jsonLD = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: frontmatter.title,
  description: frontmatter.description,
  ...(frontmatter.image ? { image: imageUrl } : {}),
  url: Astro.request.url,
  datePublished: isoDate + 'T08:00:00-05:00',
  author: {
    '@type': 'Person',
    name: 'Bassim Shahidy',
    jobTitle: 'IT Technician',
    worksFor: {
      '@type': 'Organization',
      name: 'NYC Bar Association',
    },
    description:
      'Bassim Shahidy is an IT specialist with experience in information technologies, audio visual technologies, and computer science. Bassim also has a vast set of academic interests including history, political science, and philosophy.',
    url: 'https://bassimshahidy.com',
    sameAs: [
      'https://www.linkedin.com/in/bassimshahidy',
      'https://github.com/avgvstvs96',
    ],
    contactPoint: {
      '@type': 'ContactPoint',
      email: 'bassim@bassimshahidy.com',
      contactType: 'professional',
    },
  },
};

const schema = JSON.stringify(jsonLD, null, 2);
---

<BaseLayout {...frontmatter}>
  <script slot="head" type="application/ld+json" set:html={schema} />
  <div class="flex justify-center">
    <div class="2xl:w-[240px]"></div>
    <article
      class="prose dark:prose-invert prose-h1:pt-2

      max-w-64 3xs:max-w-xs 2xs:max-w-sm xs:max-w-md sm:max-w-xl md:max-w-2xl min-[868px]:max-w-3xl lg:max-w-[42rem] xl:max-w-4xl 

      prose-code:text-accent-600 prose-code:dark:text-accent-400 prose-code:font-medium prose-code:py-1 prose-code:px-2 prose-code:mx-[0.5px]
      before:prose-code:hidden after:prose-code:hidden

      prose-a:decoration-accent-400 prose-a:underline-offset-[3px] prose-a:transition-colors prose-a:duration-100 hover:prose-a:text-accent-300

      prose-hr:border-accent-500
      dark:prose-hr:border-accent-400 dark:prose-hr:border-opacity-60

      prose-table:border prose-th:px-3 prose-td:px-3 prose-td:border-r prose-th:border-r dark:prose-table:border-primary-600 dark:prose-td:border-r dark:prose-td:border-primary-600 dark:prose-th:border-primary-600">
      <div class="mb-1 flex justify-start">
        <span
          class="written-by max-w-fit rounded-md bg-accent-300/25 px-2 py-1 text-sm text-accent-500 dark:bg-accent-700/25 dark:text-accent-400">
          Written by {frontmatter.author} on {frontmatter.pubDate}
        </span>
      </div>
      <h1>{frontmatter.title}</h1>
      {
        frontmatter.image && (
          <Image
            src={images[frontmatter.image]()}
            width={frontmatter.image.width}
            height={frontmatter.image.height}
            alt={frontmatter.title}
          />
        )
      }
      <p>{frontmatter.description}</p>
      <slot />
    </article>
    <div
      class="hidden min-h-full prose-a:transition-colors prose-a:duration-100 lg:block">
      <TableOfContents headings={headings} />
    </div>
  </div>
</BaseLayout>
<style is:global>
    :not(pre)>code {
    @apply mx-0.5 rounded-md bg-gray-200 px-1.5 py-1 dark:bg-gray-800;
  }
</style>