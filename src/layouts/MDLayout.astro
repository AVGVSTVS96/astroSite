---
import { Image } from 'astro:assets';
import BaseLayout from '@layouts/BaseLayout.astro';
import Prose from '@components/Prose.astro';
import { TableOfContents } from '@components/TableOfContents';
import { formatDate, getImage } from '@/lib/utils';
import { generateJsonLd } from '@/lib/utils/generateBlogSchema';
import type { CollectionEntry } from 'astro:content';
import type { MarkdownHeading } from 'astro';

type Props = {
  data: CollectionEntry<'posts'>['data'];
  headings: MarkdownHeading[];
};

const { data, headings } = Astro.props;

const schema = generateJsonLd(data, Astro.request.url);
const image = data.image ? await getImage(data.image.url) : undefined;
---

<BaseLayout {...Astro.props}>
  <script is:inline slot="head" type="application/ld+json" set:html={schema} />
  <div
    class="grid grid-cols-1 justify-center lg:grid-cols-[1fr_240px] 2xl:grid-cols-[240px_1fr_240px]">
    <div class="hidden 2xl:block"></div>
    <article class="mx-6 xs:mx-10">
      <Prose>
        <div class="mb-1 flex justify-start">
          <span class="text-sm mb-0 text-muted-foreground">
            <time>
              {formatDate(data.pubDate)}
            </time>
          </span>
        </div>
        <h1>{data.title}</h1>
        {
          data.image && image && (
            <Image
              src={image}
              width={image.width}
              height={image.height}
              alt={data.image.alt}
            />
          )
        }
        <p>{data.description}</p>
        <slot />
      </Prose>
    </article>
    <div
      class="hidden min-h-full prose-a:transition-colors prose-a:duration-100 lg:block">
      <TableOfContents headings={headings} />
    </div>
  </div>
</BaseLayout>
